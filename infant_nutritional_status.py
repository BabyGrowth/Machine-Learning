# -*- coding: utf-8 -*-
"""infant_nutritional_status.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pbPgPllKGmIwcgJU_HsNcmCccOsw-HCi

#Environment Setting
"""

import pandas as pd
import csv

"""#Code

Define and adjust the function of the dataset
"""

def calculate_z_score(value, gender, measurement_type, age):
    csv_file = f"{gender}_{measurement_type}.csv"
    z_score_data = pd.read_csv(csv_file, sep=';')

    z_score_row = z_score_data[z_score_data['Month'] == age]
    if not z_score_row.empty:
      z_score = z_score_row[(z_score_data['Month'] == age)][['-3 SD', '-2 SD', '-1 SD', 'Median', '1 SD', '2 SD', '3 SD']].values[0]

    if value < z_score[0]:
        return 'severe'
    elif value < z_score[1]:
        return 'moderate'
    else:
        return 'normal'

"""Adjust the inputted data with the *World Health Organization* (WHO) standards."""

def classify_nutritional_status(infant_data):
    # Extract information from the input data
    age = infant_data['age']
    gender = infant_data['gender']
    height = infant_data['height']
    weight = infant_data['weight']
    head_circumference = infant_data['head_circumference']
    arm_length = infant_data['arm_length']

    # Calculate z-scores for each measurement
    height_status = calculate_z_score(height, gender, 'height', age)
    weight_status = calculate_z_score(weight, gender, 'weight', age)
    head_status = calculate_z_score(head_circumference, gender, 'head', age)
    arm_status = calculate_z_score(arm_length, gender, 'arm', age)

    # Classify nutritional status based on z-scores
    nutritional_status = {
        'Stunted': 'Severely Stunted' if height_status == 'severe' else 'Moderately Stunted' if height_status == 'moderate' else 'No',
        'Wasted': 'Severely Wasted' if weight_status == 'severe' else 'Moderately Wasted' if weight_status == 'moderate' else 'No',
        'Overweight': 'Overweight' if weight_status == 'normal' and height_status == 'normal' else 'No',
        'Underweight': 'Severely Underweight' if weight_status == 'severe' else 'Moderately Underweight' if weight_status == 'moderate' else 'No',
    }

    return nutritional_status

"""Data input, creating dictionary, and output"""

age = int(input("Enter infant age (months): "))
gender = input("Enter infant gender (L for male, P for female): ").upper()
height = float(input("Enter infant height (cm): "))
weight = float(input("Enter infant weight (kg): "))
head_circumference = float(input("Enter infant head circumference (cm): "))
arm_length = float(input("Enter infant arm length (cm): "))

infant_data = {
    'age': age,
    'gender': gender,
    'height': height,
    'weight': weight,
    'head_circumference': head_circumference,
    'arm_length': arm_length,
}

print("\nNutritional Status:")
for category, status in result.items():
    print(f'{category}: {status}')